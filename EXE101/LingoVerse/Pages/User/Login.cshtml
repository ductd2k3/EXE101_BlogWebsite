@page
@model LingoVerse.Pages.User.LoginModel
@{
    string errorMessage = TempData["ErrorMessage"] as string;
    string successMessage = TempData["SuccessMessage"] as string;
}
<style>
    .login-container {
        background: #1b263b;
        padding: 40px;
        border-radius: 15px;
        box-shadow: 0 10px 20px rgba(119, 141, 169, 0.5);
        max-width: 400px;
        width: 100%;
        margin: auto; /* Đặt giữa trang */
    }

        .login-container{
            margin-top:40px;
        }
        .login-container h2 {
            color: #00b4d8;
            text-align: center;
            margin-bottom: 30px;
        }

        .login-container .form-control {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: #e0e1dd;
            border-radius: 25px;
            padding: 10px 20px;
            margin-bottom: 20px;
        }

            .login-container .form-control::placeholder {
                color: #778da9;
            }

        .login-container .btn {
            background: #00b4d8;
            border: none;
            border-radius: 25px;
            padding: 10px;
            width: 100%;
            font-weight: bold;
            transition: background 0.3s;
        }

            .login-container .btn:hover {
                background: #4361ee;
            }

        .login-container .text-link {
            color: #e0e1dd;
            text-decoration: none;
            transition: color 0.3s;
        }

            .login-container .text-link:hover {
                color: #00b4d8;
            }
        p{
            color: #e0e1dd;
        }
    /* Giữ nguyên style cũ, thêm style cho toast */
    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 20px;
        border-radius: 25px;
        color: white;
        font-size: 14px;
        z-index: 1000;
        opacity: 0;
        transition: opacity 0.3s;
    }

        .toast.show {
            opacity: 1;
        }

    .toast-error {
        background: #ff4d4d;
    }

    .toast-success {
        background: #00b4d8;
    }
</style>
<!-- Login Form -->
<div class="login-container">
    <h2>Đăng Nhập</h2>
    <form method="post">
        <div class="mb-3">
            <input type="email" name="email" class="form-control" id="email" placeholder="Email" required>
        </div>
        <div class="mb-3">
            <input type="password" name="password" class="form-control" id="password" placeholder="Mật khẩu" required>
        </div>
        <div class="mb-3 text-center">
            <a href="#" class="text-link">Quên mật khẩu?</a>
        </div>
        <button type="submit" class="btn">Đăng Nhập</button>
        <div class="mt-3 text-center">
            <p>Chưa có tài khoản? <a href="/User/Register" class="text-link">Đăng ký ngay</a></p>
        </div>
    </form>
</div>
<script>
    // Thêm hàm showToast
    function showToast(message, type) {
        const toast = document.createElement('div');
        toast.className = `toast ${type} show`;
        toast.textContent = message;
        document.body.appendChild(toast);

        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => toast.remove(), 300); // Xóa sau khi fade out
        }, 3000); // Hiển thị 3 giây
    }
    // Hiển thị toast nếu có message
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <text>
            showToast('Tài khoản không tồn tại! Vui lòng kiểm tra lại', 'toast-error');
        </text>
    }
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <text>
            showToast('Đăng ký thành công! Vui lòng đăng nhập lại!', 'toast-success');
        </text>
    }
</script>